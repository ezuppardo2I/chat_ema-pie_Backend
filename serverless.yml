service: chat-ema-pie-backend
frameworkVersion: 3
provider:
  name: aws
  deploymentMethod: direct
  runtime: provided.al2
  region: eu-west-2
  memorySize: 1024

package:
  individually: true
  artifact: build/bootstrap.zip

plugins:
  - serverless-iam-roles-per-function
  - serverless-prune-plugin

custom:
  prune:
    automatic: true
    number: 3

functions:
  putUser:
    handler: main.putUser
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:PutItem
        Resource:
          - arn:aws:dynamodb:eu-west-2:737830503619:table/chat-users

  getUser:
    handler: main.getUser
    events:
      - http:
          path: /user/{userID}
          method: GET
          cors:
            origin: "*"
            headers:
              - Content-Type
              - Content-Encoding
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:GetItem
        Resource:
          - arn:aws:dynamodb:eu-west-2:737830503619:table/chat-users

  getUsers:
    handler: main.getUsers
    events:
      - http:
          path: /user
          method: GET
          cors:
            origin: "*"
            headers:
              - Content-Type
              - Content-Encoding
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:Scan
        Resource:
          - arn:aws:dynamodb:eu-west-2:737830503619:table/chat-users

  patchUser:
    handler: main.patchUser
    events:
      - http:
          cors: true
          path: /user
          method: PATCH

    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:UpdateItem
        Resource:
          - arn:aws:dynamodb:eu-west-2:737830503619:table/chat-users

  patchUserLobbies:
    handler: main.patchUserLobbies
    events:
      - http:
          cors: true
          path: /user/lobbies
          method: PATCH

    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:UpdateItem
        Resource:
          - arn:aws:dynamodb:eu-west-2:737830503619:table/chat-users

  connectToIoT:
    handler: main.iotConnection
    events:
      - http:
          path: iot
          method: POST
          cors: true
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - iot:AttachPolicy
        Resource: "*"

  putMessage:
    handler: main.putMessage
    events:
      - http:
          cors: true
          path: /message
          method: PUT

    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:PutItem
        Resource:
          - arn:aws:dynamodb:eu-west-2:737830503619:table/chat-messages

  putLobby:
    handler: main.putLobby
    events:
      - http:
          cors: true
          path: /lobby
          method: PUT

    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:PutItem
        Resource:
          - arn:aws:dynamodb:eu-west-2:737830503619:table/chat-lobbies

  getLobby:
    handler: main.getLobby
    events:
      - http:
          path: /lobby/{lobbyID}
          method: GET
          cors:
            origin: "*"
            headers:
              - Content-Type
              - Content-Encoding
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:GetItem
        Resource:
          - arn:aws:dynamodb:eu-west-2:737830503619:table/chat-lobbies

  getMessages:
    handler: main.getMessages
    events:
      - http:
          path: /message/{lobbyID}
          method: GET
          cors:
            origin: "*"
            headers:
              - Content-Type
              - Content-Encoding
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:Query
        Resource:
          - arn:aws:dynamodb:eu-west-2:737830503619:table/chat-messages/index/lobbyID-timestamp-index

  getPresigned:
    handler: main.getPresigned
    events:
      - http:
          path: /imageurl/{userID}
          method: GET
          cors:
            origin: "*"
            headers:
              - Content-Type
              - Content-Encoding
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - s3:PutObject
        Resource:
          - arn:aws:s3:::chat-avatar-bucket/*
